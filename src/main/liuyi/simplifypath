package simplifypath;/**
 * Created : liuyi
 * Date: 2019/6/21
 */

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author liuyi
 * @create 2019-06-21 6:53
 **/

public class Solution {
	public static void main(String[] args) {
		System.out.println(
				new Solution().simplifyPath("/a/./b///../c/../././../d/..//../e/./f/./g/././//.//h///././/..///"));
		System.out.println(new Solution().simplifyPath("/"));
		System.out.println(new Solution().simplifyPath("/."));
		System.out.println(new Solution().simplifyPath("/home/"));
		System.out.println(new Solution().simplifyPath("/../"));
		System.out.println(new Solution().simplifyPath("/home//foo/"));
		System.out.println(new Solution().simplifyPath("/a/./b/../../c/"));
		System.out.println(new Solution().simplifyPath("/a/../../b/../c//.//"));
		System.out.println(new Solution().simplifyPath("/a//b////c/d//././/.."));
	}
    public String simplifyPath(String path) {
        if(path==null||path.isEmpty()){
            return path;
        }
        // 防止出现/home 这种,切分会失效
		path += "/";
        //切分字符串 /a /b / /. /...
        List<String> splitList=new ArrayList<>();
		StringBuilder temp = new StringBuilder();
        for(char item:path.toCharArray()){
			if (item == '/' && temp.length() > 0 && temp.charAt(0) == '/') {
				splitList.add(temp.toString());
				temp = new StringBuilder();
				temp.append("/");
				continue;
            }
			temp.append(item);
        }
		List<String> resultList = new ArrayList<>();
		for (String item : splitList) {
			if (item.equals(".") || item.equals("/.")) {
				if (resultList.size() == 0) {
					resultList.add("/");
				}
				continue;
			} else if (item.equals("..") || item.equals("/..")) {
				if (resultList.size() == 0) {
					resultList.add("/");
					continue;
				}
				if (resultList.size() == 1 && resultList.get(resultList.size() - 1).equals("/")) {
					continue;
				}
				resultList.remove(resultList.size() - 1);
			} else if (item.equals("/") || item.equals("//")) {
				if (resultList.size() > 0) {
					continue;
				}
				resultList.add(item);
			} else {
				resultList.add(item);
			}
		}
		temp = new StringBuilder();
		for (int i = 0; i < resultList.size(); i++) {
			if (temp.length() == 0 && resultList.get(i).equals("/")) {
				continue;
			}
			temp.append(resultList.get(i));
		}
		if (temp.length() == 0) {
			temp.append("/");
		}
		return temp.toString();
    }
}
